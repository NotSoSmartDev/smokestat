(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))s(n);new MutationObserver(n=>{for(const r of n)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function o(n){const r={};return n.integrity&&(r.integrity=n.integrity),n.referrerPolicy&&(r.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?r.credentials="include":n.crossOrigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(n){if(n.ep)return;n.ep=!0;const r=o(n);fetch(n.href,r)}})();const N="modulepreload",$=function(e){return"/smokestat/"+e},L={},P=function(t,o,s){if(!o||o.length===0)return t();const n=document.getElementsByTagName("link");return Promise.all(o.map(r=>{if(r=$(r),r in L)return;L[r]=!0;const a=r.endsWith(".css"),i=a?'[rel="stylesheet"]':"";if(!!s)for(let m=n.length-1;m>=0;m--){const f=n[m];if(f.href===r&&(!a||f.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${r}"]${i}`))return;const c=document.createElement("link");if(c.rel=a?"stylesheet":N,a||(c.as="script",c.crossOrigin=""),c.href=r,document.head.appendChild(c),a)return new Promise((m,f)=>{c.addEventListener("load",m),c.addEventListener("error",()=>f(new Error(`Unable to preload CSS for ${r}`)))})})).then(()=>t()).catch(r=>{const a=new Event("vite:preloadError",{cancelable:!0});if(a.payload=r,window.dispatchEvent(a),!a.defaultPrevented)throw r})};function x(e={}){const{immediate:t=!1,onNeedRefresh:o,onOfflineReady:s,onRegistered:n,onRegisteredSW:r,onRegisterError:a}=e;let i,d;const c=async(f=!0)=>{await d};async function m(){if("serviceWorker"in navigator){const{Workbox:f}=await P(()=>import("./workbox-window.prod.es5-5ffdab76.js"),[]);i=new f("/smokestat/sw.js",{scope:"/smokestat/",type:"classic"}),i.addEventListener("activated",u=>{(u.isUpdate||u.isExternal)&&window.location.reload()}),i.addEventListener("installed",u=>{u.isUpdate||s==null||s()}),i.register({immediate:t}).then(u=>{r?r("/smokestat/sw.js",u):n==null||n(u)}).catch(u=>{a==null||a(u)})}}return d=m(),c}const O=x({onNeedRefresh(){confirm("New content available. Reload?")&&O()},onOfflineReady(){console.log("App ready to work offline");const e=document.createElement("div");e.className="notification info",e.textContent="App is ready for offline use",document.body.appendChild(e),setTimeout(()=>{e.classList.add("fade-out"),setTimeout(()=>{document.body.removeChild(e)},300)},3e3)}});window.addEventListener("load",()=>{console.log("Service worker registration initialized")});const _="smokeStatsDB",A=1,p="smokeRecords",M=e=>(e||new Date).toISOString().split("T")[0],C=()=>M(new Date),b=()=>new Promise((e,t)=>{const o=indexedDB.open(_,A);o.onerror=s=>{console.error("Database error:",s.target.error),t("Could not open database")},o.onsuccess=s=>{const n=s.target.result;console.log("Database opened successfully"),e(n)},o.onupgradeneeded=s=>{const n=s.target.result;if(!n.objectStoreNames.contains(p)){const r=n.createObjectStore(p,{keyPath:"id",autoIncrement:!0});r.createIndex("timestamp","timestamp",{unique:!1}),r.createIndex("date","date",{unique:!1}),console.log("Object store created")}}}),q=async()=>{const e=await b();return new Promise((t,o)=>{const n=e.transaction([p],"readwrite").objectStore(p),r={timestamp:Date.now(),date:C()},a=n.add(r);a.onsuccess=()=>{console.log("Record added successfully"),t(r)},a.onerror=i=>{console.error("Error adding record:",i.target.error),o("Failed to add record")}})},I=async()=>{const e=await b(),t=C();return new Promise((o,s)=>{const a=e.transaction([p],"readonly").objectStore(p).index("date"),i=IDBKeyRange.only(t),d=a.getAll(i);d.onsuccess=()=>{o(d.result)},d.onerror=c=>{console.error("Error getting today's records:",c.target.error),s("Failed to get today's records")}})},F=async()=>{try{return(await I()).length}catch(e){return console.error("Error getting today's count:",e),0}};let w=null,y=null,E=null;const T=e=>{if(!e)return"--";const t=Math.floor(e/1e3),o=Math.floor(t/60),s=Math.floor(o/60),n=Math.floor(s/24);return n>0?`${n}d ${s%24}h ${o%60}m`:s>0?`${s}h ${o%60}m ${t%60}s`:o>0?`${o}m ${t%60}s`:`${t}s`},j=e=>{if(y=document.getElementById(e),!y){console.error(`Element with id ${e} not found`);return}v()},R=e=>{E=e,w&&clearInterval(w),v(),w=setInterval(v,1e3)},v=()=>{if(!y)return;if(!E){y.textContent="No records yet";return}const t=Date.now()-E;y.textContent=T(t)},U=e=>{const t=new Date(e),o=t.getHours().toString().padStart(2,"0"),s=t.getMinutes().toString().padStart(2,"0");return`${o}:${s}`};let g=null,l=null,h=null;const W=()=>(g=document.getElementById("smoke-button"),l=document.getElementById("smoke-records"),h=document.getElementById("today-count"),!g||!l||!h?(console.error("Required UI elements not found"),!1):!0),B=e=>{h&&(h.textContent=e)},z=()=>{g&&(g.classList.add("active"),setTimeout(()=>{g.classList.remove("active")},200))},H=()=>{l&&(l.innerHTML="")},D=(e,t=0)=>{var r,a;if(!l)return;const o=document.createElement("li"),s=document.createElement("span");s.className="record-time",s.textContent=U(e.timestamp);const n=document.createElement("span");if(n.className="record-elapsed",t===0)n.textContent="(Just now)";else{const i=(a=(r=l.children[t-1])==null?void 0:r.dataset)==null?void 0:a.timestamp;if(i){const d=parseInt(i)-e.timestamp;n.textContent=`(${T(d)} after previous)`}}o.dataset.timestamp=e.timestamp,o.appendChild(s),o.appendChild(n),l.firstChild?l.insertBefore(o,l.firstChild):l.appendChild(o)},K=e=>{H(),[...e].sort((o,s)=>s.timestamp-o.timestamp).forEach((o,s)=>{D(o,s)})},S=(e,t="info")=>{const o=document.createElement("div");o.className=`notification ${t}`,o.textContent=e,document.body.appendChild(o),setTimeout(()=>{o.classList.add("fade-out"),setTimeout(()=>{document.body.removeChild(o)},300)},3e3)},V=e=>{const t=document.createElement("button");t.className="install-button",t.innerHTML="ðŸ“¥",t.title="Install App",t.addEventListener("click",async()=>{t.style.display="none",e.prompt();const{outcome:o}=await e.userChoice;console.log(`Installation outcome: ${o}`)}),document.body.appendChild(t),t.style.display="flex"};let k=null;const J=async()=>{if(console.log("Initializing SmokeStats app"),!W()){console.error("Failed to initialize UI");return}try{await b()}catch(e){console.error("Failed to initialize database:",e),S("Failed to initialize the app, please try again.","error");return}j("last-smoke-timer"),await G(),Q(),console.log("App initialization complete")},G=async()=>{try{const e=await I();if(B(e.length),K(e),e.length>0){const t=[...e].sort((o,s)=>s.timestamp-o.timestamp)[0];R(t.timestamp)}}catch(e){console.error("Error loading today's data:",e),S("Failed to load today's data.","error")}},Q=()=>{document.getElementById("smoke-button").addEventListener("click",async()=>{try{z();const t=await q();R(t.timestamp);const o=await F();B(o),D(t,0)}catch(t){console.error("Error recording smoke:",t),S("Failed to record your smoking.","error")}}),window.addEventListener("beforeinstallprompt",t=>{t.preventDefault(),k=t,V(k)})};document.addEventListener("DOMContentLoaded",J);
//# sourceMappingURL=index-109eaf2a.js.map
